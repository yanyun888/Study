

void* task(void* p);
这里的返回值是干什么用的？


今天的内容
(1)多线程的基本操作
(2)综合小项目：基于TCP协议模型的聊天室

1.多线程的基本操作
1.1线程的等待和分离
(1)pthread_join

#include<pthread.h>
int pthread_join(pthread_t tid,void** retval);

第二个参数：二级指针，将目标线程终止时的退出状态存放在*retval指定的存储区中
PTHREAD_CANCEL,

(2)pthread_detach

int pthread_detach(pthread_t thread);

函数功能：将参数thread所指定的线程标记为分离状态，分离状态的线程终止时，会自动释放资源给系统，
其他线程无法等待，也就是让pthread_join函数失效。

对于新创建的线程来说，要么设置为可分离状态，要么设置为不可分离状态；也就是调用
pthread_detach/pthread_join 进行处理

(3)pthread_exit(void* retval);
#include<pthread.h>
void pthread_exit(void* retval);
由参数返回线程的退出状态信息。
函数的功能：终止当前正在调用的线程，通过参数返回当前进程的推出状态信息，该信息可以被同一个进程
的其他线程用pthread_join来获取

练习：
创建一个子线程，在子线程中打印1~20之间的整数，当打印到10时，此时调用pthread_exit函数来终止该线
程，并且将10作为线程的推出状态，主线程负责等待并接収退出状态。

(4)pthread_cancel
#include<pthread.h>
int pthread_cancel(pthread_t thread);
函数功能：
主要用于给参数指定的线程发送取消的请求，是否取消以及何时取消取决于state和type

int pthread_setcancelstate(int state,int* oldstate);
主要用于设置取消的状态，来决定是否允许被取消
PTHREAD_CANCEL_ENABLE 默认状态
PTHREAD_CANCEL_DISABLE 

int pthread_setcanceltype(int type,int* oldtype);
主要用于设置取消类型，来决定何时被取消
PTHREAD_CANCEL_DEFERRED - 表示延迟取消,在下一个取消点取消
PTHREAD_CANCEL_ASYNCHRONOUS - 表示立即取消

1.3线程的同步问题。
(1)基本概念
当多个线程同时访问同一个共享资源时，可能会造成数据的混乱问题，此时需要对多个线程进行协调，而多
个线程之间的协调和通信叫做线程的同步问题。

(2)解决方案
为了实现线程的同步问题，可以让多个线程依次串行访问共享资源，而不是并行，从而避免冲突。 

(3)使用互斥量(互斥锁)来实现线程同步问题的流程
a.定义互斥量
	pthread_mutex_t mutex;
b.初始化互斥量
	pthread_mutex_init(&mutex,NULL);
c.使用互斥量进行加锁
	pthread_mutex_lock(&mutex);
d.使用共享资源
e.使用互斥量进行解锁
	pthread_mutex_unlock(&mutex);
f.如果不再使用，则销毁互斥量
	pthread_mutex_destroy(&mutex);

(4)使用信号量来实现线程的同步问题
信号量 - 计数器，用于控制同时访问同一个共享资源的进程个数/线程个数

当信号量为1时，效果等同于互斥量
#include<semaphore.h>
a.定义信号量
 sem_t sem;
b.初始化信号量
 sem_init(&sem,0,初始值);//0表示线程之间的共享量。
c.获取信号量的值，也就是让信号量的值减1
 sem_wait(&sem);
d.访问共享资源
e.释放信号量的值
 sem_post(&sem);
f.如果不再使用，则销毁信号量
 sem_destory(&sem);

(5)使用条件变量实现线程的同步问题
	DMS项目进行讲解
	data mine system
	- 生产者消费者模型

2.综合小项目
2.1项目的名称
	基于TCP通信模型的聊天室
2.2功能
	最多支持100人排队进入聊天室系统，同时支持100人同时在线聊天
2.3项目的架构和分析
	采用C/S架构进行项目的设计

(1)服务器
	a.基于TCP通信模型的7步走
	b.要求服务器可以不断地相应客户端的链接请求,while(1),
		每当相应一个客户端后，将accept得到的描述符和通信地址都保存起来(链表或数组)
	c.要求服务器可以同时相应多个客户端的链接,pthread_create
	d.针对每一个客户端可以进行不断地通信，while(1)
	e.要求每当接受到客户端的消息时，转发给其他所有的客户端,send群发,可以跳过自身
		考虑数组在客户端已经下线的情况
	f.当客户端发来bye时则表示该客户端已下线,结束线程，从数组/链表中将对应的描述符和地址删除。
	g.要求使用ctrl+c来关闭服务器，并结束所有的线程，signal(SIGINT,func)

(2)客户端
	a.基于TCP通信模型的5步走
	b.要求当客户端启动时，需要用户输入一个昵称
	c.要求客户端可以不断的和服务器进行通信，while(1)
	d.要求客户端输入bye时，则表示客户端下线
	e.要求客户端的发送和接受相互独立，多线程进行处理


2.4项目的要求
(1)要求实现基本的文字聊天
(2)考虑并实现文件的传输功能
(3)采用网络编程和多线程技术重构银行项目





(2)客户端
