


内存管理技术

虚拟内存管理技术
Unix/Linux都采用虚拟内存管理技术，对内存进行管理，即：
每个进程都可以有0~4G-1的地址空间(虚拟的，不是真实存在的），由操作系统负责建立虚拟地址空间到真实物理内存之间的映射。
因此，不同进程的地址空间看起来是一样的，但是对应的物理内存并不是一样的。

使用磁盘作为内存转储
其中0~3G-1是用户空间，3G~5G-1是内核空间，但是系统给了一些接口函数用于切换到内核空间



内存在分配的时候，每一个内存页是4kb,4096个字节

使用malloc申请动态内存时的注意事项
malloc除了申请所需要的存储空间之外，还能申请额外的12个字节，用于存放动态内存的管理信息，
如动态内存块的大小以及书否被占用等信息。
使用maloc申请的动态内存时，注意避免内存的越界访问，因为越界访问极有可能破坏动态内存的管理信息。
一般来说，使用malloc申请比较小的动态内存时，操作系统一次性会分配33个内存页。
目的为提高效率。


使用free函数释放动态内存的问题
一般来说，使用malloc函数申请比较大的内存时，操作系统会分配比33个内存页还多一些的内存空间，
而使用free函数释放内存时，释放多少则从堆区空间中减去多少，当所有的动态内存释放完毕时，操作系统
还会保留33个内存页来处理再次申请内存，本质上还是为了提高效率。


unistd.h
sys/types.h
int getpid(void);
cat /proc/XXX/maps-察看当前内存的映射情况


内存管理的相关函数
getpagesize();	-获取当前系统一个内存页的大小
sbrk();	brk();	-调整动态内存的大小


_SVID_SOURCE
_XOPEN_SOURCE





